//====================================================================
//          _________                                                  
//          \_   ___ \_______  ____   ____  __ __  ______             
//          /    \  \/\_  __ \/    \ /    \|  |  \/  ___/              
//          \     \____|  | \(  ( ) )   |  \  |  /\___ \               
//           \______  /|__|   \____/|___|  /____//____  >              
//                  \/                   \/           \/               
//                                                               
//====================== Cronus Script ===============================
//= Trocador de Gemas
//===== Por: =========================================================
//= rA dev Team; LyDe
//===== Versão Atual: ================================================
//= 1.0
//===== Compatível com: ==============================================
//= Cronus GIT
//===== Descrição: ===================================================
//= NPC que troca cores de Gemas por outras Gemas de outras Cores.
//===== Comentários Adicionais: ======================================
//= 1.0 Traduzido. [LyDe]
//====================================================================

payon,173,238,5	script	Jade#pay	754,{
	if (checkweight(1201,1) == 0) {
		mes "^3355FFEspere um pouco! Nesse momento, existem muitos itens com você. Por favor retorne após colocar alguns itens no Armazém da Kafra.^000000";
		close;
	}
	mes "[Jade]";
	mes "Traga para mim 2 Gemas da mesma cor, e eu vou trocá-las por Gemas de cores diferentes.";
	next;
	switch(select("Gemas Azuis para Vermelhas!:Gemas Vermelhas para Amarelas!:Gemas Amarelas para Azuis!")) {
	case 1: callsub S_TradeGems,717,716;
	case 2: callsub S_TradeGems,716,715;
	case 3: callsub S_TradeGems,715,717;
	}

S_TradeGems:
	if (countitem(getarg(0)) < 2) {
		mes "[Jade]";
		mes "Haha...!";
		mes "Você está de brincadeira comigo, certo?";
		mes "Eu não poderei fazer este serviço se você não me trouxer as 2 "+getitemname(getarg(0))+"s!";
		close;
	}
	else {
		set .@gems,countitem(getarg(0))/2;
		mes "[Jade]";
		mes "Acredito que posso criar um total de " + .@gems + " " + getitemname(getarg(1)) + "s usando as "+getitemname(getarg(0))+"s que você tem no momento.";
		mes "O que gostaria de fazer?";
		next;
		switch(select("Me dê quantas puder.:Quero digitar quantas preciso.:Deixa pra lá.")) {
		case 1:
			delitem getarg(0),.@gems * 2;
			getitem getarg(1),.@gems;
			mes "[Jade]";
			mes "Então aqui está!";
			mes "Sinta-se livre para voltar quando quiser.";
			mes "Hm, o que você está olhando?";
			mes "Tem algo no meu rosto!?!?";
			close;
		case 2:
			mes "[Jade]";
			mes "Então quantas gemas vai querer?";
			mes "O máximo que você poderá escolher é 100.";
			next;
			while(1) {
				input .@input,0,101;
				if (.@input == 0) {
					mes "[Jade]";
					mes "Nenhuma!?";
					mes "Acho que você precisa mudar de ideia...";
					close;
				}
				else if (.@input > 100) {
					mes "[Jade]";
					mes "Errm...";
					mes "Eu pedi que escrevesse um número menor do que 100, se lembra?";
					next;
				}
				else {
					break;
				}
			}

			if (.@gems > .@input) {
				delitem getarg(0),.@input * 2;
				getitem getarg(1),.@input;
				mes "[Jade]";
				mes "Então aqui está!";
				mes "Sinta-se livre para voltar quando quiser.";
				mes "Hm, o que você está olhando?";
				mes "Tem algo no meu rosto!?!?";
			}
			close;
		case 3:
			mes "[Jade]";
			mes "Claro, sem problema.";
			mes "Volte quando quiser.";
			close;
		}
	}
}